{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Family Tree",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Family Tree App"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://family-tree-6zsd.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Family",
      "description": "Operations about family tree."
    }
  ],
  "paths": {
    "/family": {
      "get": {
        "tags": [
          "Family"
        ],
        "summary": "Get list of family",
        "operationId": "getFamily",
        "description": "Get list of persons with this endpoint",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get family",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found family!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/family"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "post": {
        "tags": [
          "Family"
        ],
        "summary": "Create person",
        "operationId": "createPerson",
        "description": "Create a person with payload",
        "security": [],
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "age"
                ],
                "properties": {
                  "name": {
                    "description": "Person's name",
                    "type": "string",
                    "example": "David"
                  },
                  "age": {
                    "description": "Persont's age",
                    "type": "number",
                    "example": 12
                  },
                  "parents": {
                    "description": "Parents person",
                    "type": "string",
                    "example": [
                      "Alice",
                      "Bob"
                    ]
                  },
                  "ancestors": {
                    "description": "Ancestors person",
                    "type": "string",
                    "example": [
                      "John",
                      "Mary",
                      "David",
                      "Eva"
                    ]
                  },
                  "children": {
                    "description": "Children person",
                    "type": "string",
                    "example": [
                      "Grace",
                      "Henry"
                    ]
                  },
                  "grandchildren": {
                    "description": "Grandchildren person",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a person!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/family"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/family/{id}": {
      "get": {
        "tags": [
          "Family person"
        ],
        "summary": "Get person by id",
        "operationId": "getPerson",
        "description": "Get person by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "670940476add1ee16a5460ad"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get person by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found person with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/family"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Family person"
        ],
        "summary": "Update person",
        "operationId": "updatePerson",
        "description": "Update a person by ID",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "The ID of the person to update",
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Person's name",
                    "type": "string",
                    "example": "David"
                  },
                  "age": {
                    "description": "Persont's age",
                    "type": "number",
                    "example": 12
                  },
                  "parents": {
                    "description": "Parents person",
                    "type": "string",
                    "example": [
                      "Alice",
                      "Bob"
                    ]
                  },
                  "ancestors": {
                    "description": "Ancestors person",
                    "type": "string",
                    "example": [
                      "John",
                      "Mary",
                      "David",
                      "Eva"
                    ]
                  },
                  "children": {
                    "description": "Children person",
                    "type": "string",
                    "example": [
                      "Grace",
                      "Henry"
                    ]
                  },
                  "grandchildren": {
                    "description": "Grandchildren person",
                    "type": "string",
                    "example": [
                      "Olivia",
                      "Peter"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the person!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the person!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/family"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Family person"
        ],
        "summary": "Delete person by id",
        "operationId": "deletePerson",
        "description": "Delete person by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete person by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully delete person with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/family"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "family": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "age"
        ],
        "properties": {
          "_id": {
            "description": "Person's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Person's name",
            "type": "string",
            "example": "David"
          },
          "age": {
            "description": "Persont's age",
            "type": "number",
            "example": 12
          },
          "parents": {
            "description": "Parents person",
            "type": "string",
            "example": [
              "Alice",
              "Bob"
            ]
          },
          "ancestors": {
            "description": "Ancestors person",
            "type": "string",
            "example": [
              "John",
              "Mary",
              "David",
              "Eva"
            ]
          },
          "children": {
            "description": "Children person",
            "type": "string",
            "example": [
              "Grace",
              "Henry"
            ]
          },
          "grandchildren": {
            "description": "Grandchildren person",
            "type": "string",
            "example": [
              "Olivia",
              "Peter"
            ]
          }
        }
      }
    },
    "responses": {
      "404": {
        "description": "Person not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Person not found"
                }
              }
            }
          }
        }
      }
    }
  }
}
